---
plugin: "wordParser"
processingTimeout: 600000
markers:
- !<generalQueryMarker>
  uuid: "6a8d670a-7e07-4b8d-9df8-9115998aa273"
  query: "\"Public Storage.docx\""
  name: "General Query Marker"
  implementation: "generalQueryMarker"
  documentationMarkdown: "Filter using the query \"Public Storage.docx\""
  plugin: "core"
  uiContribution: "generalQueryMarker-marker-settings"
mappings:
- !<groovyScriptColumn>
  uuid: "cc7e3037-400f-4839-c8c5-4d8bbb3d9a78"
  minimized: true
  showHelp: false
  variableName: "annualMeeting"
  attachEnabled: false
  previewEnabled: false
  cleanerType: "NONE"
  outputDateFormat: "MM/dd/yyyy"
  inputDateFormat: "dd/MM/yyyy"
  script: "config = [\n    'label': 'AnnualMeeting',\n    'threshold': '.5',\n   \
    \ 'filter_by_lemmas_only': false,\n    'entities': [\n        ['label': 'AnnualMeetingDate',\n\
    \            'type': 'DATE',\n            'phrase': 'annual meeting'\n       \
    \ ],\n        ['label': 'AnnualMeetingLocation',\n            'pattern': [['ENT_TYPE':\
    \ 'CARDINAL', 'OP': '+'],\n                        ['POS': 'PROPN', 'OP': '+'],\n\
    \                        ['OP': '*'],\n                        ['ENT_TYPE': 'GPE'],\n\
    \                        ['OP': '*'],\n                        ['ENT_TYPE': 'GPE',\
    \ 'OP': '*']],\n            'phrase': 'annual meeting'\n        ]\n    ],\n  \
    \  'examples': [\n        'The 2020 Annual Meeting of Shareholders will be held\
    \ on Thursday, June 1 at 8:45 a.m. EST, at 101 Main St, Charlotte, NC.'\n    ],\n\
    \    'questions': [\n        'When and where is the Annual Meeting of Shareholders?'\n\
    \    ]\n]\n\nrows = wordDocument.extract_similar_sentences(config)\n\nif (rows.isEmpty())\
    \ {\n    return null\n} else {\n    value = rows[0].getValue()\n    if (rows.size()\
    \ > 1) {\n        value += rows[1].getValue()\n    }\n    date = rows[0].getRelated('AnnualMeetingDate').getContent('\
    \ ')\n    location = rows[0].getRelated('AnnualMeetingLocation').getContent('\
    \ ')\n    return ['sentence': value, 'score': rows[0].getProb(), 'date': date,\
    \ 'location': location]\n}\n"
  name: "Groovy Script (Column)"
  implementation: "groovyScriptColumn"
  documentationMarkdown: "Use the following groovy script to evaluate the value:\n\
    ```\nconfig = [\n    'label': 'AnnualMeeting',\n    'threshold': '.5',\n    'filter_by_lemmas_only':\
    \ false,\n    'entities': [\n        ['label': 'AnnualMeetingDate',\n        \
    \    'type': 'DATE',\n            'phrase': 'annual meeting'\n        ],\n   \
    \     ['label': 'AnnualMeetingLocation',\n            'pattern': [['ENT_TYPE':\
    \ 'CARDINAL', 'OP': '+'],\n                        ['POS': 'PROPN', 'OP': '+'],\n\
    \                        ['OP': '*'],\n                        ['ENT_TYPE': 'GPE'],\n\
    \                        ['OP': '*'],\n                        ['ENT_TYPE': 'GPE',\
    \ 'OP': '*']],\n            'phrase': 'annual meeting'\n        ]\n    ],\n  \
    \  'examples': [\n        'The 2020 Annual Meeting of Shareholders will be held\
    \ on Thursday, June 1 at 8:45 a.m. EST, at 101 Main St, Charlotte, NC.'\n    ],\n\
    \    'questions': [\n        'When and where is the Annual Meeting of Shareholders?'\n\
    \    ]\n]\n\nrows = wordDocument.extract_similar_sentences(config)\n\nif (rows.isEmpty())\
    \ {\n    return null\n} else {\n    value = rows[0].getValue()\n    if (rows.size()\
    \ > 1) {\n        value += rows[1].getValue()\n    }\n    date = rows[0].getRelated('AnnualMeetingDate').getContent('\
    \ ')\n    location = rows[0].getRelated('AnnualMeetingLocation').getContent('\
    \ ')\n    return ['sentence': value, 'score': rows[0].getProb(), 'date': date,\
    \ 'location': location]\n}\n\n```\n"
  plugin: "groovy"
  grouping: "Scripting"
  uiContribution: "groovyScriptColumn-mapping-settings"
  mappingType: "COLUMN"
- !<groovyScriptColumn>
  uuid: "5259b69f-185a-9a79-7430-62dc4efa2680"
  minimized: true
  showHelp: false
  variableName: "checkOutput"
  attachEnabled: false
  previewEnabled: false
  cleanerType: "NONE"
  outputDateFormat: "MM/dd/yyyy"
  inputDateFormat: "dd/MM/yyyy"
  script: "\noutRow = ['filename' : document.filename]\nif (annualMeeting) {\n   \
    \ outRow.put('AnnualMeetingSentence', annualMeeting.sentence)\n    outRow.put('AnnualMeetingScore',\
    \ annualMeeting.score)\n    outRow.put('AnnualMeetingDate', annualMeeting.date)\n\
    \    outRow.put('AnnualMeetingLocation', annualMeeting.location)\n}\nlog.write(outRow)\n"
  name: "Groovy Script (Column)"
  implementation: "groovyScriptColumn"
  documentationMarkdown: "Use the following groovy script to evaluate the value:\n\
    ```\n\noutRow = ['filename' : document.filename]\nif (annualMeeting) {\n    outRow.put('AnnualMeetingSentence',\
    \ annualMeeting.sentence)\n    outRow.put('AnnualMeetingScore', annualMeeting.score)\n\
    \    outRow.put('AnnualMeetingDate', annualMeeting.date)\n    outRow.put('AnnualMeetingLocation',\
    \ annualMeeting.location)\n}\nlog.write(outRow)\n\n```\n"
  plugin: "groovy"
  grouping: "Scripting"
  uiContribution: "groovyScriptColumn-mapping-settings"
  mappingType: "COLUMN"
- !<groovyScriptDataset>
  uuid: "066f96b0-2adc-7d55-5745-3bda14eb88cb"
  minimized: true
  showHelp: false
  datasetName: "AnnualReportsExtracts"
  attachEnabled: false
  previewEnabled: false
  script: "row = ['filename' : document.filename]\nif (annualMeeting) {\n    row.put('AnnualMeetingSentence',\
    \ annualMeeting.sentence)\n    row.put('AnnualMeetingScore', annualMeeting.score)\n\
    \    row.put('AnnualMeetingDate', annualMeeting.date)\n    row.put('AnnualMeetingLocation',\
    \ annualMeeting.location)\n}\nreturn row\n"
  name: "Groovy Script (Row)"
  implementation: "groovyScriptDataset"
  documentationMarkdown: "Use the following groovy script to create the rows:\n```\n\
    row = ['filename' : document.filename]\nif (annualMeeting) {\n    row.put('AnnualMeetingSentence',\
    \ annualMeeting.sentence)\n    row.put('AnnualMeetingScore', annualMeeting.score)\n\
    \    row.put('AnnualMeetingDate', annualMeeting.date)\n    row.put('AnnualMeetingLocation',\
    \ annualMeeting.location)\n}\nreturn row\n\n```\n"
  plugin: "groovy"
  grouping: "Scripting"
  mappingType: "DATASET"
  uiContribution: "groovyScriptDataset-mapping-settings"
- !<groovyScriptColumn>
  uuid: "a48c74e9-956a-14a7-e8f9-e3302e03a155"
  minimized: true
  showHelp: false
  variableName: "testlog"
  attachEnabled: true
  previewEnabled: true
  cleanerType: "NONE"
  outputDateFormat: "MM/dd/yyyy"
  inputDateFormat: "dd/MM/yyyy"
  script: "log.write(\n    '''\n    Hello,\n    \n    Multiline string.\n    \n  \
    \  \n    \n    Goes down to here.\n    \n    \n    \n    \n    And there.\n  \
    \  \n    \n    \n    \n    \n    \n    Even more\n    '''\n    )"
  name: "Groovy Script (Column)"
  implementation: "groovyScriptColumn"
  documentationMarkdown: "Use the following groovy script to evaluate the value:\n\
    ```\nlog.write(\n    '''\n    Hello,\n    \n    Multiline string.\n    \n    \n\
    \    \n    Goes down to here.\n    \n    \n    \n    \n    And there.\n    \n\
    \    \n    \n    \n    \n    \n    Even more\n    '''\n    )\n```\n"
  plugin: "groovy"
  grouping: "Scripting"
  uiContribution: "groovyScriptColumn-mapping-settings"
  mappingType: "COLUMN"
documentSets:
- enabled: true
  name: "MSCI_Word_AR_DocSet"
helpers: []
schemaVersion: 1
datasetMappings:
- !<groovyScriptDataset>
  uuid: "066f96b0-2adc-7d55-5745-3bda14eb88cb"
  minimized: true
  showHelp: false
  datasetName: "AnnualReportsExtracts"
  attachEnabled: false
  previewEnabled: false
  script: "row = ['filename' : document.filename]\nif (annualMeeting) {\n    row.put('AnnualMeetingSentence',\
    \ annualMeeting.sentence)\n    row.put('AnnualMeetingScore', annualMeeting.score)\n\
    \    row.put('AnnualMeetingDate', annualMeeting.date)\n    row.put('AnnualMeetingLocation',\
    \ annualMeeting.location)\n}\nreturn row\n"
  name: "Groovy Script (Row)"
  implementation: "groovyScriptDataset"
  documentationMarkdown: "Use the following groovy script to create the rows:\n```\n\
    row = ['filename' : document.filename]\nif (annualMeeting) {\n    row.put('AnnualMeetingSentence',\
    \ annualMeeting.sentence)\n    row.put('AnnualMeetingScore', annualMeeting.score)\n\
    \    row.put('AnnualMeetingDate', annualMeeting.date)\n    row.put('AnnualMeetingLocation',\
    \ annualMeeting.location)\n}\nreturn row\n\n```\n"
  plugin: "groovy"
  grouping: "Scripting"
  mappingType: "DATASET"
  uiContribution: "groovyScriptDataset-mapping-settings"
